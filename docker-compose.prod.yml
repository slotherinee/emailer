services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: emailer-app-prod
    restart: unless-stopped
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - emailer-network
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: emailer-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --appendfsync everysec
    volumes:
      - redis-data:/data
    networks:
      - emailer-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 3

networks:
  emailer-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
